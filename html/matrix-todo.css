:root {
    --matrix-green: #00ff41;  /* Classic Matrix green */
    --matrix-green-rgb: 0, 255, 65;  /* RGB values for the same color */
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: monospace;
}

body {
    background-color: black;
    color: var(--matrix-green);
    min-height: 100vh;
    /* More subtle vintage effect with multiple layers */
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.6),
        0 0 4px rgba(var(--matrix-green-rgb), 0.4),
        0 0 6px rgba(var(--matrix-green-rgb), 0.2);
    animation: flicker 5s infinite;
    /* Custom scrollbar for the entire page */
    overflow-y: overlay;  /* Makes scrollbar overlay content */
}

/* Custom scrollbar for the entire page */
::-webkit-scrollbar {
    width: 4px;
}

::-webkit-scrollbar-track {
    background: rgba(var(--matrix-green-rgb), 0.1);
}

::-webkit-scrollbar-thumb {
    background: rgba(var(--matrix-green-rgb), 0.3);
}

::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--matrix-green-rgb), 0.5);
}

.container {
    padding: 2.5rem;
    display: flex;
    flex-direction: column;
    gap: 20px;
}

@media (min-width: 640px) {
    .container {
        padding: 8rem 12rem;
        gap: 24px;
        max-width: 1200px;
    }
}

.progress-bar {
    display: flex;
    gap: 4px;
    margin-bottom: 4px;
}

.progress-block {
    width: 20px;
    height: 20px;
    background-color: rgba(var(--matrix-green-rgb), 0.2);
}

.progress-block.filled {
    background-color: var(--matrix-green);
    /* Super enhanced neon glow for progress */
    box-shadow: 
        0 0 4px rgba(var(--matrix-green-rgb), 0.9),
        0 0 8px rgba(var(--matrix-green-rgb), 0.8),
        0 0 12px rgba(var(--matrix-green-rgb), 0.6),
        0 0 16px rgba(var(--matrix-green-rgb), 0.4),
        0 0 24px rgba(var(--matrix-green-rgb), 0.2);
}

.progress-text {
    font-size: 14px;
    margin-bottom: 20px;
}

.task-input {
    width: 100%;
    background: black;
    color: var(--matrix-green);
    border: none;
    outline: none;
    font-size: 24px;
    padding: 0;
    margin-bottom: 0;
    position: relative;
    z-index: 1;
    background: transparent;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.9),
        0 0 4px rgba(var(--matrix-green-rgb), 0.7),
        0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

.task-input::placeholder {
    color: rgba(var(--matrix-green-rgb));
    opacity: 0.5;
}

.task-list {
    display: flex;
    flex-direction: column;
    gap: 16px;
    max-width: 800px;
}

.task-item {
    cursor: grab;
    transition: background-color 0.2s ease;
    position: relative;
    will-change: opacity;
}

.task-item span {
    flex: 1;
}

.task-item.completed span {
    text-decoration: line-through;
    opacity: 0.5;
}

.delete-btn {
    position: absolute;
    left: -60px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--matrix-green);
    cursor: pointer;
    opacity: 0;
    font-size: 24px;
    padding: 0 8px;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.9),
        0 0 4px rgba(var(--matrix-green-rgb), 0.7),
        0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

.task-item:hover .delete-btn {
    opacity: 1;
}

@media (min-width: 640px) {
    .task-input,
    .task-item,
    .delete-btn {
        font-size: 28px;
    }
}

/* Add Matrix rain effect */
#matrix-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0.15;
    z-index: -1;
}

/* Task categories */
.task-item.urgent {
    color: #FFD700;
    text-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
}

.task-item.important {
    color: #FFD700;
    text-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
}

/* Keyboard shortcut hint */
.shortcut-hint {
    position: fixed;
    bottom: 20px;
    right: 20px;
    font-size: 10px;
    opacity: 0.5;
    display: flex;
    align-items: center;
}

.attribution {
    display: inline-block;
    margin-left: 0;
}

.attribution a {
    color: var(--matrix-green);
    text-decoration: underline;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.9),
        0 0 4px rgba(var(--matrix-green-rgb), 0.7),
        0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

.attribution a:hover {
    text-decoration: none;
}

.ghost-text {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0.5;
    pointer-events: none;
    font-size: 24px;
    z-index: 0;
    width: 100%;
    padding: inherit;
}

@media (min-width: 640px) {
    .ghost-text {
        font-size: 28px;
    }
}

.input-wrapper {
    position: relative;
    width: 100%;
    margin-bottom: 32px;
}

/* Subtle drop position indicators */
.task-item.drop-before::before,
.task-item.drop-after::after {
    content: '';
    position: absolute;
    left: -10px;
    width: 4px;
    height: 4px;
    background: var(--matrix-green);
    border-radius: 50%;
    box-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.8),
        0 0 4px rgba(var(--matrix-green-rgb), 0.6),
        0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

.task-item.drop-before::before {
    top: -2px;
}

.task-item.drop-after::after {
    bottom: -2px;
}

.task-item.dragging {
    opacity: 0.9;
    cursor: grabbing;
    background: rgba(var(--matrix-green-rgb), 0.1);
    border: 2px solid rgba(var(--matrix-green-rgb), 0.5);
}

.global-todos {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
}

.global-todo-item {
    position: absolute;
    font-size: 0.9rem;
    color: rgba(var(--matrix-green-rgb), 0.6);
    transition: color 0.5s ease;
    width: 250px;
    height: 60px;
    padding: 8px;
}

.global-todo-item:hover {
    color: rgba(var(--matrix-green-rgb), 0.4);
}

.todo-number {
    font-size: 0.8rem;
    opacity: 0.6;
    margin-bottom: 2px;
}

.todo-text {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 200px;
}

.global-tasks-list {
    position: relative;
    width: 100%;
    height: 100%;
}

/* Add pulse animation */
@keyframes pulse {
    0% { opacity: 0.2; }
    50% { opacity: 0.6; }
    100% { opacity: 0.2; }
}

.global-todo-item.completed {
    text-decoration: line-through;
    opacity: 0.3;
}

.global-todo-item.completed:hover {
    opacity: 0.2;
}

.global-toggle {
    position: fixed;
    bottom: 50px;
    right: 20px;
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 12px;
    opacity: 0.5;
    transition: opacity 0.3s;
}

.global-toggle:hover {
    opacity: 1;
}

.switch {
    position: relative;
    display: inline-block;
    width: 40px;
    height: 20px;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(var(--matrix-green-rgb), 0.2);
    transition: .4s;
    border: 1px solid rgba(var(--matrix-green-rgb), 0.5);
}

.slider:before {
    position: absolute;
    content: "";
    height: 14px;
    width: 14px;
    left: 2px;
    bottom: 2px;
    background-color: var(--matrix-green);
    transition: .4s;
    box-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.8),
        0 0 4px rgba(var(--matrix-green-rgb), 0.6),
        0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

input:checked + .slider {
    background-color: rgba(var(--matrix-green-rgb), 0.4);
}

input:checked + .slider:before {
    transform: translateX(20px);
}

/* Optional: Add a subtle scan line effect */
body::after {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        rgba(34, 197, 94, 0.05) 50%, 
        rgba(0, 0, 0, 0.03) 50%
    );
    background-size: 100% 3px;
    pointer-events: none;
    z-index: 999;
    opacity: 0.5;
}

@keyframes flicker {
    0% {
        opacity: 1;
    }
    1% {
        opacity: 0.95;
    }
    2% {
        opacity: 1;
    }
    7% {
        opacity: 1;
    }
    8% {
        opacity: 0.97;
    }
    9% {
        opacity: 1;
    }
    20% {
        opacity: 1;
    }
    21% {
        opacity: 0.93;
    }
    22% {
        opacity: 1;
    }
    100% {
        opacity: 1;
    }
}

/* Add a subtle color distortion effect */
body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        rgba(var(--matrix-green-rgb), 0.01),
        rgba(var(--matrix-green-rgb), 0.01) 1px,
        transparent 1px,
        transparent 2px
    );
    pointer-events: none;
    z-index: 998;
    animation: flicker 7s infinite;
}

.notes-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
}

.note-item {
    position: fixed;
    background: rgba(var(--matrix-green-rgb), 0.015);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.1);
    padding: 16px;
    min-width: 400px;
    width: 400px;
    pointer-events: auto;
    cursor: default;
    visibility: hidden;
    will-change: transform;
    z-index: 11;
    box-shadow: 
        0 0 20px rgba(0, 0, 0, 0.2),
        inset 0 0 1px rgba(var(--matrix-green-rgb), 0.05),
        0 0 2px rgba(var(--matrix-green-rgb), 0.03);
}

.note-header {
    padding: 0 0 8px 0;
    cursor: move;
    user-select: none;
    display: flex;
    justify-content: flex-end;
    opacity: 0.3;
    font-size: 11px;
    letter-spacing: 1px;
}

.note-item textarea {
    width: 100%;
    min-height: 120px;
    height: auto;
    background: transparent;
    border: none;
    color: var(--matrix-green);
    font-family: monospace;
    font-size: 20px;
    line-height: 1.5;
    resize: none;
    outline: none;
    cursor: text;
    opacity: 0.8;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.3),
        0 0 4px rgba(var(--matrix-green-rgb), 0.2);
}

.note-item .delete-note {
    background: none;
    border: none;
    color: var(--matrix-green);
    cursor: pointer;
    opacity: 0.3;
    font-size: 14px;
    padding: 4px 8px;
    transition: opacity 0.2s;
}

.note-item .delete-note:hover {
    opacity: 0.6;
}

/* Even more minimal drag indicator */
.note-item::after {
    content: "···";
    position: absolute;
    bottom: 8px;
    right: 8px;
    color: var(--matrix-green);
    opacity: 0.4;
    cursor: move;
    font-size: 20px;
    letter-spacing: 2px;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.6),
        0 0 4px rgba(var(--matrix-green-rgb), 0.4);
}

.note-item:hover::after {
    opacity: 0.8;
}

.updates-popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.97);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.15);
    padding: 24px;
    z-index: 1000;
    width: 600px;
    max-width: 90vw;
    box-shadow: 
        0 0 40px rgba(0, 0, 0, 0.6),
        inset 0 0 1px rgba(var(--matrix-green-rgb), 0.05);
    max-height: 80vh;
    overflow-y: hidden;
}

.updates-popup.active {
    display: flex;
    flex-direction: column;
}

.updates-popup h2 {
    color: var(--matrix-green);
    margin-bottom: 20px;
    font-size: 16px;
    letter-spacing: 2px;
    opacity: 0.9;
    text-shadow: 0 0 2px rgba(var(--matrix-green-rgb), 0.4);
}

.close-updates {
    position: absolute;
    top: 12px;
    right: 12px;
    background: none;
    border: none;
    color: var(--matrix-green);
    cursor: pointer;
    opacity: 0.6;
    font-size: 18px;
}

.close-updates:hover {
    opacity: 1;
}

.updates-popup h3 {
    color: var(--matrix-green);
    margin: 10px 0;
    font-size: 14px;
    letter-spacing: 1.5px;
    opacity: 0.8;
}

.feature-list {
    list-style-type: none;
    padding: 0;
    margin: 16px 0;
}

.feature-list li {
    position: relative;
    padding-left: 20px;
    margin-bottom: 8px;
    font-size: 12px;
    letter-spacing: 1px;
    opacity: 0.7;
    line-height: 1.4;
}

.feature-list li::before {
    content: "•";
    position: absolute;
    left: 6px;
    color: var(--matrix-green);
    opacity: 0.8;
}

.updates-popup p {
    margin-bottom: 8px;
    line-height: 1.4;
    font-size: 12px;
    letter-spacing: 1px;
    opacity: 0.7;
    text-shadow: none;
}

.update-item {
    margin-bottom: 24px;
    padding-bottom: 24px;
    position: relative;
}

.update-item h3 {
    margin-bottom: 12px;
    padding-bottom: 8px;
    border-bottom: 1px solid rgba(var(--matrix-green-rgb), 0.1);
}

.preview-container {
    position: relative;
    border: 1px solid rgba(var(--matrix-green-rgb), 0.15);
    border-radius: 4px;
    padding: 24px 16px 16px;
    margin-top: 16px;
    background: rgba(var(--matrix-green-rgb), 0.02);
    box-shadow: 
        inset 0 0 20px rgba(0, 0, 0, 0.4),
        0 0 8px rgba(var(--matrix-green-rgb), 0.1);
    transition: box-shadow 0.3s ease;
}

.preview-container:hover {
    box-shadow: 
        inset 0 0 20px rgba(0, 0, 0, 0.4),
        0 0 12px rgba(var(--matrix-green-rgb), 0.2);
}

.preview-label {
    position: absolute;
    top: -8px;
    left: 12px;
    background: black;
    padding: 0 8px;
    font-size: 11px;
    letter-spacing: 1.5px;
    color: var(--matrix-green);
    opacity: 0.6;
    text-shadow: 0 0 5px rgba(var(--matrix-green-rgb), 0.3);
}

.updates-content {
    flex: 1;
    overflow-y: auto;
    min-height: 0;
    max-height: 60vh;
    padding-right: 15px;
    margin-right: -15px;
}

/* Scrollbar for updates content */
.updates-content::-webkit-scrollbar {
    width: 4px;
}

.updates-content::-webkit-scrollbar-track {
    background: rgba(var(--matrix-green-rgb), 0.1);
}

.updates-content::-webkit-scrollbar-thumb {
    background: rgba(var(--matrix-green-rgb), 0.3);
}

.updates-content::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--matrix-green-rgb), 0.5);
}

.group-header {
    color: var(--matrix-green);
    font-size: 13px;
    margin: 20px 0 8px 0;
    opacity: 0.4;
    letter-spacing: 2px;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.2);
    position: relative;
}

.task-item {
    margin-left: 0;
    transition: all 0.3s ease;
}

.grouped-task {
    margin-left: 12px;
    border-left: 1px solid rgba(var(--matrix-green-rgb), 0.1);
    padding-left: 12px;
}

/* First group doesn't need top margin */
.group-header:first-of-type {
    margin-top: 0;
}

/* Add subtle hover effect for grouped items */
.group-header:hover {
    opacity: 0.6;
}

.settings-wheel {
    position: static;
    cursor: pointer;
    opacity: 0.8;
    transition: opacity 0.3s;
    font-size: 10px;
    order: -1;
}

.settings-wheel:hover {
    opacity: 1;
    text-decoration: underline;
}

.whats-new-button {
    position: static;
    cursor: pointer;
    opacity: 0.8;
    transition: opacity 0.3s;
    font-size: 10px;
    order: 0;
}

.whats-new-button:hover {
    opacity: 1;
    text-decoration: underline;
}

/* Update separator style to account for the new button */
.shortcut-hint > *:not(:last-child)::after {
    content: "•";
    margin: 0 12px;
    opacity: 0.6;
}

.settings-modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.97);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.15);
    padding: 24px;
    z-index: 1000;
    width: 500px;
    max-width: 90vw;
    box-shadow: 
        0 0 40px rgba(0, 0, 0, 0.6),
        inset 0 0 1px rgba(var(--matrix-green-rgb), 0.05);
    max-height: 80vh;
    overflow-y: hidden;
}

.settings-modal.active {
    display: flex;
    flex-direction: column;
}

.settings-modal h2 {
    color: var(--matrix-green);
    margin-bottom: 20px;
    font-size: 16px;
    letter-spacing: 2px;
    opacity: 0.9;
    text-shadow: 0 0 2px rgba(var(--matrix-green-rgb), 0.4);
}

.settings-option {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 16px;
    opacity: 0.8;
}

.settings-option:hover {
    opacity: 1;
}

.close-settings {
    position: absolute;
    top: 12px;
    right: 12px;
    background: none;
    border: none;
    color: var(--matrix-green);
    cursor: pointer;
    opacity: 0.6;
    font-size: 18px;
}

.close-settings:hover {
    opacity: 1;
}

.settings-section {
    margin-bottom: 24px;
}

.settings-section:last-child {
    flex: 1;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

.settings-section h3 {
    color: var(--matrix-green);
    font-size: 14px;
    letter-spacing: 2px;
    margin-bottom: 16px;
    opacity: 0.8;
}

.history-container {
    flex: 1;
    overflow-y: auto;
    min-height: 0;
    max-height: 500px;
}

.history-day {
    margin-bottom: 20px;
}

.history-date {
    font-size: 12px;
    opacity: 0.7;
    margin-bottom: 8px;
    letter-spacing: 1px;
}

.history-task {
    font-size: 11px;
    opacity: 0.6;
    margin-bottom: 4px;
    display: flex;
    align-items: center;
    gap: 12px;
}

.history-task.completed {
    text-decoration: line-through;
    opacity: 0.4;
}

.history-task.urgent {
    color: #FFD700;
}

.history-time {
    opacity: 0.5;
    min-width: 60px;
}

.history-group {
    opacity: 0.5;
    font-size: 10px;
}

/* Add custom scrollbar for history */
.history-container::-webkit-scrollbar {
    width: 4px;
}

.history-container::-webkit-scrollbar-track {
    background: rgba(var(--matrix-green-rgb), 0.1);
}

.history-container::-webkit-scrollbar-thumb {
    background: rgba(var(--matrix-green-rgb), 0.3);
}

.history-container::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--matrix-green-rgb), 0.5);
}

.group-suggestions {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    width: 200px;
    background: rgba(0, 0, 0, 0.95);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.15);
    z-index: 1000;
    max-height: 200px;
    overflow-y: auto;
    margin-top: 4px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.group-suggestion {
    padding: 8px 16px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 14px;
    color: var(--matrix-green);
    opacity: 0.7;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.group-suggestion:first-child {
    background: rgba(var(--matrix-green-rgb), 0.05);
    border-left: 2px solid var(--matrix-green);
}

.group-suggestion:first-child::after {
    content: '[ENTER]';
    font-size: 10px;
    opacity: 0.5;
    margin-left: 8px;
    letter-spacing: 1px;
}

.group-suggestion.selected {
    background: rgba(var(--matrix-green-rgb), 0.1);
    border-left: 2px solid var(--matrix-green);
}

.group-suggestion.selected::after {
    content: '[ENTER]';
    font-size: 10px;
    opacity: 0.5;
    margin-left: 8px;
    letter-spacing: 1px;
}

.group-suggestion:hover {
    background: rgba(var(--matrix-green-rgb), 0.1);
    border-left: 2px solid var(--matrix-green);
}
.group-header.completed {
text-decoration: line-through;
opacity: 0.5;
}

.delete-group-btn {
position: absolute;
left: -60px;
top: 50%;
transform: translateY(-50%);
background: none;
border: none;
color: var(--matrix-green);
cursor: pointer;
opacity: 0;
font-size: 24px;
padding: 0 8px;
text-shadow: 
0 0 2px rgba(var(--matrix-green-rgb), 0.9),
0 0 4px rgba(var(--matrix-green-rgb), 0.7),
0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

.group-header {
position: relative;
}

.group-header:hover .delete-group-btn {
opacity: 1;
}

/* Context menu styles */
.matrix-context-menu {
    position: fixed;
    background: rgba(0, 0, 0, 0.85);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.15);
    padding: 2px;
    z-index: 1000;
    backdrop-filter: blur(4px);
    font-size: 12px;
    letter-spacing: 1px;
    box-shadow: 
        0 0 10px rgba(0, 0, 0, 0.7),
        0 0 5px rgba(var(--matrix-green-rgb), 0.3);
    animation: menuAppear 0.15s ease-out;
    transform-origin: top left;
}

@keyframes menuAppear {
    from {
        opacity: 0;
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

.menu-item {
    padding: 6px 12px;
    cursor: pointer;
    color: var(--matrix-green);
    opacity: 0.7;
    transition: all 0.2s ease;
    white-space: nowrap;
    position: relative;
}

.menu-item:not(:last-child)::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 5px;
    right: 5px;
    height: 1px;
    background: linear-gradient(
        to right,
        transparent,
        rgba(var(--matrix-green-rgb), 0.1) 20%,
        rgba(var(--matrix-green-rgb), 0.15) 50%,
        rgba(var(--matrix-green-rgb), 0.1) 80%,
        transparent
    );
}

.menu-item:hover {
    opacity: 1;
    background: rgba(var(--matrix-green-rgb), 0.05);
    padding-left: 16px;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.8),
        0 0 4px rgba(var(--matrix-green-rgb), 0.4);
}

.menu-item.active {
    border-left: 2px solid rgba(var(--matrix-green-rgb), 0.4);
    padding-left: 10px;
}

/* Current task styles - Matrix-inspired */
.task-list .current-task {
background: rgba(var(--matrix-green-rgb), 0.04);
border-left: 2px solid var(--matrix-green);
padding: 8px 8px 8px 24px;
position: relative;
transition: all 0.3s ease;
margin: 4px 0;
overflow: hidden;
}

/* Pulsing dot indicator */
.task-list .current-task::before {
content: "";
position: absolute;
left: 8px;
top: 50%;
width: 6px;
height: 6px;
border-radius: 50%;
background-color: var(--matrix-green);
transform: translateY(-50%);
animation: dotPulse 5s infinite;
box-shadow: 0 0 8px rgba(var(--matrix-green-rgb), 0.4);
}

/* Matrix rain background effect */
.task-list .current-task::after {
content: "";
position: absolute;
top: 0;
left: 0;
right: 0;
bottom: 0;
background: repeating-linear-gradient(
90deg,
transparent,
transparent 15px,
rgba(var(--matrix-green-rgb), 0.02) 15px,
rgba(var(--matrix-green-rgb), 0.02) 30px
);
animation: matrixRain 8s linear infinite;
pointer-events: none;
opacity: 0.4;
}

@keyframes dotPulse {
0% { 
opacity: 0.4; 
transform: translateY(-50%) scale(0.8);
box-shadow: 0 0 4px rgba(var(--matrix-green-rgb), 0.2);
}
50% { 
opacity: 1; 
transform: translateY(-50%) scale(1);
box-shadow: 0 0 12px rgba(var(--matrix-green-rgb), 0.6);
}
100% { 
opacity: 0.4; 
transform: translateY(-50%) scale(0.8);
box-shadow: 0 0 4px rgba(var(--matrix-green-rgb), 0.2);
}
}

@keyframes matrixRain {
0% {
background-position: 0 0;
}
100% {
background-position: 60px 0;
}
}

/* Special handling for completed current tasks */
.task-list .current-task.completed::before {
animation: none;
opacity: 0.3;
}

.task-list .current-task.completed span {
background: none;
}

.task-time {
margin-left: 12px;
opacity: 0;  /* Hidden by default */
font-size: 0.5em;
letter-spacing: 0.5px;
color: rgba(var(--matrix-green-rgb), 0.7);
font-weight: 300;
transition: opacity 0.2s ease;  /* Smooth transition */
}

/* Show time on hover */
.task-item:hover .task-time {
opacity: 0.6;
}

/* Show time for current task */
.current-task .task-time {
opacity: 0.6;
}

/* Don't show time for completed tasks unless hovered */
.task-item.completed .task-time {
opacity: 0;
}

.task-item.completed:hover .task-time {
opacity: 0.6;
}

/* Add new animation for text pulsing */
@keyframes textPulse {
0% { 
opacity: 0.4;
text-shadow: 
    0 0 2px rgba(var(--matrix-green-rgb), 0.2),
    0 0 4px rgba(var(--matrix-green-rgb), 0.1);
}
50% { 
opacity: 0.6;
text-shadow: 
    0 0 2px rgba(var(--matrix-green-rgb), 0.8),
    0 0 4px rgba(var(--matrix-green-rgb), 0.4),
    0 0 6px rgba(var(--matrix-green-rgb), 0.2);
}
100% { 
opacity: 0.4;
text-shadow: 
    0 0 2px rgba(var(--matrix-green-rgb), 0.2),
    0 0 4px rgba(var(--matrix-green-rgb), 0.1);
}
}

/* Update current task time animation */
.current-task .task-time {
opacity: 0.6;
animation: textPulse 5s infinite;  /* Slower 3s animation */
}

/* Diagram styles */
.diagram-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 9; /* Below notes but above other elements */
    display: none; /* Hidden by default */
}

.diagram-overlay.active {
    display: block;
}

/* Special case for always-active mode to ensure normal page interaction */
.diagram-overlay.always-active {
    pointer-events: none;
    z-index: 5; /* Lower z-index to not interfere with other interactions */
}

/* Only make diagram components interactive */
.diagram-node, 
.connection-handle, 
.delete-node-btn, 
.delete-connection-btn,
.node-content {
    pointer-events: auto;
}

.diagram-overlay.connection-dragging {
    cursor: crosshair;
    pointer-events: auto; /* Enable pointer events during dragging */
}

/* Diagram node styles - updated to be more subtle and elegant like notes */
.diagram-node {
    position: absolute;
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.1);
    min-width: 160px;
    min-height: 70px;
    max-width: 300px;
    pointer-events: auto;
    cursor: move;
    will-change: transform;
    z-index: 12;
    box-shadow: 
        0 0 20px rgba(0, 0, 0, 0.2),
        inset 0 0 1px rgba(var(--matrix-green-rgb), 0.05),
        0 0 2px rgba(var(--matrix-green-rgb), 0.03);
    transition: box-shadow 0.3s ease, border 0.3s ease;
    display: flex;
    flex-direction: column;
    padding: 8px;
    margin-top: 18px;
}

/* Dashed node style */
.diagram-node.dashed {
    border: 1px dashed rgba(var(--matrix-green-rgb), 0.3);
    background: rgba(0, 0, 0, 0.8); /* Slightly darker background */
}

.diagram-node.dashed:hover {
    border: 1px dashed rgba(var(--matrix-green-rgb), 0.5);
    box-shadow: 
        0 0 10px rgba(0, 0, 0, 0.3),
        inset 0 0 2px rgba(var(--matrix-green-rgb), 0.1);
}

/* Remove the old drag area since we now have a dedicated drag handle */
/* .diagram-node::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 30px;
    height: 24px;
    cursor: move;
    z-index: 1;
} */

.node-content {
    color: var(--matrix-green);
    font-family: monospace;
    font-size: 14px;
    padding: 10px 10px 14px 10px; /* Extra padding at bottom to avoid overlap with drag handle */
    outline: none;
    flex: 1;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.3),
        0 0 4px rgba(var(--matrix-green-rgb), 0.2);
    letter-spacing: 1px;
    opacity: 0.9;
    cursor: text;
    position: relative;
    z-index: 2;
}

.diagram-node:hover {
    box-shadow: 
        0 0 10px rgba(0, 0, 0, 0.3),
        inset 0 0 2px rgba(var(--matrix-green-rgb), 0.15);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.2);
}

.diagram-node.dragging {
    opacity: 0.8;
    box-shadow: 
        0 0 15px rgba(0, 0, 0, 0.4),
        inset 0 0 3px rgba(var(--matrix-green-rgb), 0.2);
    z-index: 13;
}

.diagram-node.source-node {
    border: 1px dashed rgba(var(--matrix-green-rgb), 0.3);
    box-shadow: 
        0 0 10px rgba(0, 0, 0, 0.3),
        inset 0 0 3px rgba(var(--matrix-green-rgb), 0.1);
    animation: subtleNodePulse 6s infinite;
}

/* Delete button styling */
.delete-node-btn {
    position: absolute;
    top: 5px;
    right: 5px;
    background: none;
    border: none;
    color: var(--matrix-green);
    font-size: 14px;
    cursor: pointer !important;
    opacity: 0.3;
    transition: opacity 0.3s ease;
    z-index: 15;
    padding: 4px 8px;
}

.delete-node-btn:hover {
    opacity: 0.6;
}

/* Style for note-style drag handle in diagram nodes */
.diagram-node .note-drag-handle {
    position: absolute;
    bottom: 2px;
    right: 2px;
    width: 10px;
    height: 10px;
    cursor: grab;
    opacity: 0.25; /* More subtle by default */
    z-index: 15;
}

/* Dots style for drag handle */
.diagram-node .note-drag-handle::after {
    content: "···";
    position: absolute;
    bottom: 0;
    right: 0;
    color: var(--matrix-green);
    cursor: move;
    font-size: 14px;
    letter-spacing: 1px;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.6),
        0 0 4px rgba(var(--matrix-green-rgb), 0.4);
}

.diagram-node:hover .note-drag-handle {
    opacity: 0.7; /* More visible on hover but still subtle */
}

.diagram-node .note-drag-handle:active {
    cursor: grabbing;
}

.connection-handle {
    position: absolute;
    bottom: -8px; 
    left: 50%;
    transform: translateX(-50%);
    width: 14px;
    height: 14px;
    border-radius: 50%;
    border: 1px solid rgba(var(--matrix-green-rgb), 0.4);
    background: rgba(0, 0, 0, 0.8);
    cursor: grab;
    opacity: 0;
    transition: all 0.3s ease;
    z-index: 14;
    box-shadow: 
        0 0 3px rgba(var(--matrix-green-rgb), 0.3),
        inset 0 0 2px rgba(var(--matrix-green-rgb), 0.2);
}

/* Replace plus sign with dots to indicate draggable connection point */
.connection-handle::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background-color: var(--matrix-green);
    box-shadow: 0 0 3px rgba(var(--matrix-green-rgb), 0.4);
}

/* Show handle on hover */
.diagram-node:hover .connection-handle {
    opacity: 0.75;
    transform: translateX(-50%) scale(1);
    animation: handlePulse 3s infinite;
}

/* Create subtle movement on hover to suggest draggability */
.connection-handle:hover {
    opacity: 0.9;
    border: 1px solid var(--matrix-green);
    background: rgba(var(--matrix-green-rgb), 0.06);
    box-shadow: 
        0 0 5px rgba(var(--matrix-green-rgb), 0.5),
        inset 0 0 3px rgba(var(--matrix-green-rgb), 0.3);
    transform: translateX(-50%) scale(1.1) translateY(-1px);
}

/* Add tooltip with instruction - more subtle version */
.connection-handle::after {
    content: "Drag to connect";
    position: absolute;
    bottom: -20px;
    left: 50%;
    transform: translateX(-50%) scale(0);
    font-size: 9px;
    white-space: nowrap;
    color: rgba(var(--matrix-green-rgb), 0.8);
    opacity: 0;
    transition: all 0.2s ease;
    pointer-events: none;
    text-shadow: 0 0 1px rgba(0, 0, 0, 0.6);
    background: rgba(0, 0, 0, 0.6);
    padding: 2px 5px;
    border-radius: 2px;
    z-index: 20;
}

.connection-handle:hover::after {
    opacity: 0.8;
    transform: translateX(-50%) scale(1);
    bottom: -22px;
}

/* Connection handle pulse animation - more subtle */
@keyframes handlePulse {
    0% {
        box-shadow: 
            0 0 3px rgba(var(--matrix-green-rgb), 0.3),
            inset 0 0 2px rgba(var(--matrix-green-rgb), 0.2);
    }
    50% {
        box-shadow: 
            0 0 5px rgba(var(--matrix-green-rgb), 0.4),
            inset 0 0 3px rgba(var(--matrix-green-rgb), 0.3);
    }
    100% {
        box-shadow: 
            0 0 3px rgba(var(--matrix-green-rgb), 0.3),
            inset 0 0 2px rgba(var(--matrix-green-rgb), 0.2);
    }
}

/* More visible connection lines for all connections */
.diagram-connection {
    stroke: var(--matrix-green);
    stroke-width: 1.5px;
    opacity: 0.6;
    filter: drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.3));
    transition: stroke-width 0.2s ease, opacity 0.2s ease;
    pointer-events: auto; /* Make sure it's clickable */
}

/* Solid connection style - overwrites the default dashed style */
.diagram-connection.solid-connection {
    stroke-dasharray: none; /* No dash for solid lines */
}

/* Dashed connection style */
.diagram-connection.dashed-connection {
    stroke-dasharray: 5, 8; /* Dashed pattern */
    animation: connectionFlow 240s linear infinite;
}

.diagram-connection:hover {
    stroke-width: 2px;
    opacity: 0.8;
}

/* Style for temporary connection line while dragging - same as regular connections */
.diagram-connection.temp-connection {
    stroke: var(--matrix-green);
    stroke-width: 1.5px;
    opacity: 0.8;
    filter: drop-shadow(0 0 4px rgba(var(--matrix-green-rgb), 0.4));
}

/* Make temp connection use correct dash style based on node type */
.diagram-connection.temp-connection.solid-connection {
    stroke-dasharray: none;
}

.diagram-connection.temp-connection.dashed-connection {
    stroke-dasharray: 5, 8;
    animation: connectionFlow 240s linear infinite;
}

/* Wider invisible hit area for better hover detection */
.connection-hit-area {
    stroke: transparent;
    stroke-width: 10px;
    pointer-events: stroke;
}

/* Add styles for floating tags */
.node-floating-tags {
    position: absolute;
    top: -24px; /* Position above the node */
    left: 0;
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 4px;
    z-index: 2;
}

.floating-tag {
    background: rgba(0, 0, 0, 0.6);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.1);
    color: var(--matrix-green);
    font-size: 12px;
    padding: 1px 5px;
    opacity: 0.7;
    letter-spacing: 0.5px;
    white-space: nowrap;
    text-shadow: 0 0 1px rgba(var(--matrix-green-rgb), 0.3);
}

/* Right side indicator */
.right-indicator {
    top: 0;
    right: 0;
    width: 1px; /* Even thinner for sharper appearance */
    height: 100%;
    background: linear-gradient(
        to bottom,
        rgba(var(--matrix-green-rgb), 0) 0%,
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) - 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0.9) var(--connection-pos), /* Stronger center point */
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) + 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0) 100%
    );
    /* Add back the intense glow effect for connections */
    filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
           drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.9)) 
           drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.6));
}

/* Left side indicator */
.left-indicator {
    top: 0;
    left: 0;
    width: 1px; /* Even thinner for sharper appearance */
    height: 100%;
    background: linear-gradient(
        to bottom,
        rgba(var(--matrix-green-rgb), 0) 0%,
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) - 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0.9) var(--connection-pos), /* Stronger center point */
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) + 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0) 100%
    );
    /* Add back the intense glow effect for connections */
    filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
           drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.9)) 
           drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.6));
}

/* Top side indicator */
.top-indicator {
    top: 0;
    left: 0;
    width: 100%;
    height: 1px; /* Even thinner for sharper appearance */
    background: linear-gradient(
        to right,
        rgba(var(--matrix-green-rgb), 0) 0%,
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) - 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0.9) var(--connection-pos), /* Stronger center point */
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) + 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0) 100%
    );
    /* Add back the intense glow effect for connections */
    filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
           drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.9)) 
           drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.6));
}

/* Bottom side indicator */
.bottom-indicator {
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px; /* Even thinner for sharper appearance */
    background: linear-gradient(
        to right,
        rgba(var(--matrix-green-rgb), 0) 0%,
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) - 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0.9) var(--connection-pos), /* Stronger center point */
        rgba(var(--matrix-green-rgb), 0) calc(var(--connection-pos) + 20%), /* Tighter gradient */
        rgba(var(--matrix-green-rgb), 0) 100%
    );
    /* Add back the intense glow effect for connections */
    filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
           drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.9)) 
           drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.6));
}

/* Add active class for connection indicators */
.connection-indicator.active {
    animation: indicatorPulse 3s infinite;
}

/* Refined animation for indicator pulse - sharper and more intense */
@keyframes indicatorPulse {
    0% {
        opacity: 0.85;
        filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
               drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.9)) 
               drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.5));
    }
    50% {
        opacity: 1;
        filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
               drop-shadow(0 0 4px rgba(var(--matrix-green-rgb), 1.0)) 
               drop-shadow(0 0 12px rgba(var(--matrix-green-rgb), 0.8));
    }
    100% {
        opacity: 0.85;
        filter: drop-shadow(0 0 1px rgba(var(--matrix-green-rgb), 1.0))
               drop-shadow(0 0 3px rgba(var(--matrix-green-rgb), 0.9)) 
               drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.5));
    }
}

/* Add connectionFlow animation for animated dashed lines */
@keyframes connectionFlow {
    0% {
        stroke-dashoffset: 0;
    }
    100% {
        stroke-dashoffset: 1000;
    }
}

/* Animation for subtle node pulsing */
@keyframes subtleNodePulse {
    0% {
        box-shadow: 
            0 0 10px rgba(0, 0, 0, 0.3),
            inset 0 0 3px rgba(var(--matrix-green-rgb), 0.1);
        border-color: rgba(var(--matrix-green-rgb), 0.3);
    }
    50% {
        box-shadow: 
            0 0 15px rgba(0, 0, 0, 0.4),
            inset 0 0 5px rgba(var(--matrix-green-rgb), 0.2);
        border-color: rgba(var(--matrix-green-rgb), 0.5);
    }
    100% {
        box-shadow: 
            0 0 10px rgba(0, 0, 0, 0.3),
            inset 0 0 3px rgba(var(--matrix-green-rgb), 0.1);
        border-color: rgba(var(--matrix-green-rgb), 0.3);
    }
}

/* Dynamic connection points for multiple connections per side */
.connection-point {
    position: absolute;
    pointer-events: none;
    z-index: 15; /* Ensure it appears above the standard indicators */
    /* Position will be set dynamically */
}

/* Make temporary connection points more vibrant */
.temp-connection-point {
    filter: drop-shadow(0 0 2px rgba(var(--matrix-green-rgb), 1.0))
           drop-shadow(0 0 6px rgba(var(--matrix-green-rgb), 0.9)) 
           drop-shadow(0 0 12px rgba(var(--matrix-green-rgb), 0.8));
    opacity: 1 !important;
}

/* Restore the delete-connection-btn style that was mistakenly removed */
.delete-connection-btn {
    font-size: 24px;
    fill: var(--matrix-green);
    cursor: pointer;
    opacity: 0; /* Hidden by default - controlled via JS */
    text-anchor: middle;
    dominant-baseline: middle;
    pointer-events: auto;
    transition: opacity 0.2s ease;
}

/* Document styles */
.documents-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 50;
}

.document-item {
    position: absolute;
    background: rgba(var(--matrix-green-rgb), 0.015);
    border: 1px solid rgba(var(--matrix-green-rgb), 0.1);
    padding: 8px 0 12px 0;
    width: 440px;
    min-height: 56px;
    pointer-events: auto;
    cursor: default;
    will-change: transform; 
    box-shadow: 
        0 0 20px rgba(0, 0, 0, 0.2),
        inset 0 0 1px rgba(var(--matrix-green-rgb), 0.05),
        0 0 2px rgba(var(--matrix-green-rgb), 0.03);
    transition: 
        box-shadow 0.25s ease, 
        width 0.25s cubic-bezier(0.25, 1, 0.5, 1),
        min-height 0.25s cubic-bezier(0.25, 1, 0.5, 1),
        background 0.25s ease;
    overflow: hidden;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    backface-visibility: hidden;
    border-radius: 0;
}

/* Fix dragging visual feedback */
.document-item[data-dragging="true"] {
    box-shadow: 
        0 0 30px rgba(var(--matrix-green-rgb), 0.15),
        0 0 20px rgba(0, 0, 0, 0.3),
        inset 0 0 2px rgba(var(--matrix-green-rgb), 0.1);
}

.document-item:hover {
    box-shadow: 
        0 0 20px rgba(0, 0, 0, 0.3),
        inset 0 0 1px rgba(var(--matrix-green-rgb), 0.1),
        0 0 4px rgba(var(--matrix-green-rgb), 0.06);
}

.document-item.expanded {
    width: 800px;
    height: 500px;
    background: rgba(0, 0, 0, 0.95);
    /* padding: 0; */
}

.document-item.collapsed {
    min-height: 48px;
    width: 370px;
}

.document-item.collapsed .document-header {
    padding-bottom: 18px;
}

.document-item.collapsed .collapsed-click-area {
    padding-top: 2px;
}

.document-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 16px 8px 12px;
    cursor: move;
    user-select: none;
    opacity: 0.8;
    position: relative;
    transition: border-bottom 0.35s ease;
    gap: 16px;
    font-size: 17px;
}

/* Container for title and DOC tag */
.title-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;
    width: 60%;
}

.doc-drag-col {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0px;
}

.document-item.expanded .document-header {
    border-bottom: none;
}

.document-title {
    background: transparent;
    border: none;
    color: var(--matrix-green);
    font-family: monospace;
    font-size: 20px;
    flex: 1;
    outline: none;
    cursor: text;
    opacity: 0.8;
    text-shadow: 0 0 2px rgba(var(--matrix-green-rgb), 0.3), 0 0 4px rgba(var(--matrix-green-rgb), 0.2);
    transition: opacity 0.35s ease, text-shadow 0.35s ease;
    margin-left: 0;
    padding: 6px 10px;
    text-transform: uppercase;
}

/* Remove the highlighting/focus style */
.document-title:focus {
    background: transparent;
    outline: none;
    border-bottom: none;
}

.document-item.expanded .document-title {
    opacity: 0.9;
    text-shadow: 0 0 2px rgba(var(--matrix-green-rgb), 0.5), 0 0 4px rgba(var(--matrix-green-rgb), 0.3);
}

.document-header-buttons {
    display: flex;
    gap: 10px;
    opacity: 0.3;
    transition: opacity 0.3s;
}

.document-item:hover .document-header-buttons {
    opacity: 0.6;
}

.document-header-buttons button {
    background: none;
    border: none;
    color: var(--matrix-green);
    cursor: pointer;
    font-size: 18px;
    padding: 6px 10px;
    transition: all 0.2s ease;
}

/* Delete button styling - make it clearly distinct */
.delete-document {
    color: var(--matrix-green);
    transition: all 0.3s ease;
}

.delete-document:hover {
    color: rgba(255, 100, 100, 0.8) !important; /* Reddish color on hover for warning */
    text-shadow: 
        0 0 3px rgba(255, 50, 50, 0.4),
        0 0 6px rgba(255, 50, 50, 0.2) !important;
}

/* Add styles for drag handle button - use consistent styling with 3 dots */
.drag-document {
    cursor: grab;
    letter-spacing: 2px;
    font-size: 13px;
    margin-left: 0;
    margin-top: -24px;
    margin-bottom: 0;
    padding: 2px 6px;
    align-self: flex-start;
    background: none;
    border: none;
    color: var(--matrix-green);
    opacity: 0.4;
}

.drag-document:active {
    cursor: grabbing;
}

.document-header-buttons button:hover {
    opacity: 1;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.9),
        0 0 4px rgba(var(--matrix-green-rgb), 0.7);
}

/* Collapsed click area for expanding documents */
.collapsed-click-area {
    display: none;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 16px;
    cursor: pointer;
    z-index: 5;
    background: transparent;
    opacity: 0.5;
    transition: opacity 0.2s ease;
}

/* Arrow indicator for expanding */
.expand-indicator {
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    color: var(--matrix-green);
    opacity: 0.8;
}

.document-item.collapsed:hover .collapsed-click-area {
    opacity: 1;
}

.document-item.collapsed .collapsed-click-area {
    display: block;
}

/* Minimize button */
.minimize-document {
    position: absolute;
    bottom: 5px;
    left: 50%;
    transform: translateX(-50%);
    background: none;
    border: none;
    color: var(--matrix-green);
    cursor: pointer;
    font-size: 16px;
    opacity: 0.4;
    z-index: 52;
    padding: 10px 18px;
    min-width: 32px;
    min-height: 24px;
    transition: opacity 0.2s ease;
}

.minimize-document:hover {
    opacity: 0.9;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.9),
        0 0 4px rgba(var(--matrix-green-rgb), 0.7);
}

/* Only show minimize button on expanded documents */
.document-item.collapsed .minimize-document {
    display: none;
}

/* Fix content height issues */
.document-content {
    padding: 8px 12px 12px 12px;
    max-height: 80vh;
    overflow-y: auto;
    opacity: 0;
    transition: opacity 0.25s ease, max-height 0.3s cubic-bezier(0.25, 1, 0.5, 1);
    height: calc(100% - 45px);
    min-height: unset;
    position: static;
    scroll-behavior: smooth;
    overscroll-behavior: contain;
    scrollbar-gutter: stable;
    font-size: 16px;
}

.document-item.expanded .document-content {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    padding: 0;
    max-height: none;
    height: 100%;
    min-height: 0;
    position: relative;
    opacity: 1;
    animation: expandContentFade 0.25s forwards;
}

.document-item.expanded .document-content textarea,
.document-content textarea {
    flex: 1 1 auto;
    height: 100%;
    min-height: 0;
    font-size: 16px;
    padding: 4px 6px 8px 6px;
    line-height: 1.5;
    width: 100%;
    background: transparent;
    border: none;
    color: var(--matrix-green);
    cursor: text;
    opacity: 0.85;
    text-shadow: 
        0 0 2px rgba(var(--matrix-green-rgb), 0.3),
        0 0 4px rgba(var(--matrix-green-rgb), 0.2);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.document-item.collapsed {
    min-height: 48px;
    width: 370px;
}

.document-item.collapsed .document-content {
    max-height: 0;
    padding: 0;
    opacity: 0;
    overflow: hidden;
    height: 0;
}

@keyframes expandContentFade {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/* Fix scrollbar appearance for better visibility */
.document-content::-webkit-scrollbar {
    width: 6px;
}

.document-content::-webkit-scrollbar-track {
    background: rgba(var(--matrix-green-rgb), 0.1);
}

.document-content::-webkit-scrollbar-thumb {
    background: rgba(var(--matrix-green-rgb), 0.3);
    border-radius: 3px;
}

.document-content::-webkit-scrollbar-thumb:hover {
    background: rgba(var(--matrix-green-rgb), 0.5);
}

/* Slightly bolder title in collapsed state but still elegant */
.document-item.collapsed .document-title {
    opacity: 0.9;
    text-shadow: 0 0 2px rgba(var(--matrix-green-rgb), 0.6), 0 0 4px rgba(var(--matrix-green-rgb), 0.4);
}

.document-content textarea:focus {
    outline: none !important;
    box-shadow: none !important;
}
